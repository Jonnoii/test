from builtins import all,dir,exec,id,input,len,ord,pow,print,round,sorted,float,int,list,range,str,open
exec('')
import os
import json
import random
import math
import time
import sys
import NamaBerwarna
import displaywarna
import random as rdm
import urllib.request
from colr import color
v='4.8'
try:
    import wget,httpx
    from pystyle import Anime as pyAnime
    from pystyle import Colors as pyColors
    from pystyle import Colorate as pyColorate
    from pystyle import Center as pyCenter
    from pystyle import System as pySystem
except:
    os.system('pip install httpx')
    os.system('pip install wget')
    os.system('pip install pystyle')
    from pystyle import Anime as pyAnime
    from pystyle import Colors as pyColors
    from pystyle import Colorate as pyColorate
    from pystyle import Center as pyCenter
    from pystyle import System as pySystem
pySystem.Clear()
pySystem.Size(120,40)
text=oDOOoOOODoODooOOOOoDo[1:]
banner=S2S2SSSSS2SSS2S2SS2222S[1:]
pyAnime.Fade(pyCenter.Center(banner),pyColors.green_to_red,pyColorate.Vertical,enter=True)
pySystem.Clear()
print('\n'*2)
print(pyColorate.Horizontal(pyColors.red_to_yellow,pyCenter.XCenter(text)))
print('\n'*5)
persi=httpx.get('https://raw.githubusercontent.com/atr19love/rilis/master/versi.txt').text
newsc=httpx.get('https://raw.githubusercontent.com/atr19love/rilis/master/topixsb.py').text
if v!=persi:
    with open('topixsb.py','w')as file1:
        file1.write(newsc)
    print(eval(binascii.unhexlify(b'6622557064617465696e6720546f7069785342205465726d757820546f6f6c73207b70657273697d2056657273696f6e22').decode('8ftu'[::+-+-(-(+1))])))
dat={'Vip':0}
delet=['cpm/pos.py','cpm/__init__.py']
for psdd in delet:
    if os.path.exists(eval(binascii.unhexlify(b'66227b707364647d22').decode('8ftu'[::+-+-(-(+1))])))==True:
        os.system(eval(binascii.unhexlify(b'6622726d207b707364647d22').decode('8ftu'[::+-+-(-(+1))])))
Vhost='us-central1-cp-multiplayer.cloudfunctions.net'
Vheader={
    'Content-Type':'application/json',
    'X-Android-Package':'com.olzhas.carparking.multyplayer',
    'X-Android-Cert':'D4962F8124C2E09A66B97C8E326AFF805489FE39',
    'Accept-Language':'in-ID, en-US',
    'X-Client-Version':'Android/Fallback/X21000008/FirebaseCore-Android',
    'X-Firebase-GMPID':'1:581727203278:android:af6b7dee042c8df539459f',
    'X-Firebase-Client':'H4sIAAAAAAAAAKtWykhNLCpJSk0sKVayio7VUSpLLSrOzM9TslIyUqoFAFyivEQfAAAA',
    'User-Agent':eval(binascii.unhexlify(b'662244616c76696b2f322e312e3020284c696e75783b20553b20416e64726f696420382e312e303b20415355535f5830305444204d4955492f31362e323031372e323030392e3038372d32307b72646d2e72616e64696e74283131313131312c393939393939297d2922').decode('8ftu'[::+-+-(-(+1))])),
    'Host':'www.googleapis.com',
    'Connection':'Keep-Alive',
    'Accept-Encoding':'gzip'
}
Vdata={}
Vdata['idToken']='eyJhbGciOiJSUzI1NiIsImtpZCI6IjNmNjcyNDYxOTk4YjJiMzMyYWQ4MTY0ZTFiM2JlN2VkYTY4NDZiMzciLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vY3AtbXVsdGlwbGF5ZXIiLCJhdWQiOiJjcC1tdWx0aXBsYXllciIsImF1dGhfdGltZSI6MTY2Njk2NzcxNywidXNlcl9pZCI6InIybnBPekpuaTloWXU1WWZEbWduamZUUVVhSjMiLCJzdWIiOiJyMm5wT3pKbmk5aFl1NVlmRG1nbmpmVFFVYUozIiwiaWF0IjoxNjY2OTY3NzE3LCJleHAiOjE2NjY5NzEzMTcsImVtYWlsIjoidHNiMDEwQGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJ0c2IwMTBAZ21haWwuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.gztM8gzOpNdW6PmmA_hfJDpxh8hCVC1RgAeKcBeVs5-sZnALK3gOtA85ip8khJyhC0N7i0iPwN9TsJqMGvqPb6qHGtuoe9agXWyPdqiztmKEBsJpJrvjPKJj24PmmoREnDnJq8cZHgX7BPyPoD25ZqhCC1pEkjz_XSoQF4qwLhM7-BR8BjcVYkWxxKxJPzfjMc3WfaW2ehHbYEjx8RcOQvsW6yp1zgGXYlbMavbyjHE2Zbl5ameRwic47WD_C6ugH4vtIf7XJWxbAF02CBHicJqLAkCQt0ioxtQpsYu_yq6khnNOA7vqCIn3G8kfmLIZvTNH9kQ-q7X59ePUwgvrmA'
Vdata['key']='AIzaSyAe_aOVT1gSfmHKBrorFvX4fRwN5nODXVA'
Vdata['firebase-instance-id-token']='fchcZJLSMpo:APA91bF8nZQY5awRdIgI41tGbAr59K6SuXEeHXC9lQiHcjNR7SN2lD4OKlQ8VuhsgJrF38NgXkDufWoDCXKz-iixYUjeNx7KildcWuQimgagDhWDMxslXhFpaQtujmqn1JywoTEvXVYZ'
Vdata['data']='ios5'
def convert_size(size_bytes):
        if size_bytes==0:
            return '0B'
        size_name=('B','KB','MB','GB','TB','PB','EB','ZB','YB')
        i=int(math.floor(math.log(size_bytes,1024)))
        p=math.pow(1024,i)
        s=round(size_bytes/p,2)
        return '%s %s' %(s,size_name[i])
def verifyPassword(email,password):
    dat['Vip']=True
    uri=eval(binascii.unhexlify(b'662268747470733a2f2f7777772e676f6f676c65617069732e636f6d2f6964656e74697479746f6f6c6b69742f76332f72656c79696e6770617274792f76657269667950617373776f72643f6b65793d7b56646174615b276b6579275d7d22').decode('8ftu'[::+-+-(-(+1))]))
    data={'email':email,'password':password,'returnSecureToken':True}
    req=httpx.post(uri,data=json.dumps(data),headers=Vheader)
    if req.status_code==200:
        ress=json.loads(req.text)
        print(eval(binascii.unhexlify(b'662276657269667950617373776f7264203a207b6c656e2872657373297d22').decode('8ftu'[::+-+-(-(+1))])))
        Vdata['idToken']=ress['idToken']
        return True
def getAccountInfo():
    uri=eval(binascii.unhexlify(b'662268747470733a2f2f7777772e676f6f676c65617069732e636f6d2f6964656e74697479746f6f6c6b69742f76332f72656c79696e6770617274792f6765744163636f756e74496e666f3f6b65793d7b56646174615b276b6579275d7d22').decode('8ftu'[::+-+-(-(+1))]))
    data={'idToken':Vdata['idToken']}
    req=httpx.post(uri,data=json.dumps(data),headers=Vheader)
    if req.status_code==200:
        ress=json.loads(req.text)
        print(eval(binascii.unhexlify(b'66226765744163636f756e74496e666f203a207b6c656e2872657373297d22').decode('8ftu'[::+-+-(-(+1))])))
def onReported(localIdRep):
    uri=eval(binascii.unhexlify(b'662268747470733a2f2f7b56686f73747d2f476574506c617965725265636f7264733222').decode('8ftu'[::+-+-(-(+1))]))
    heder={
        'Host':Vhost,
        'authorization':eval(binascii.unhexlify(b'6627426561726572207b56646174615b226964546f6b656e225d7d27').decode('8ftu'[::+-+-(-(+1))])),
        'firebase-instance-id-token':Vdata['firebase-instance-id-token'],
        'content-type':'application/json; chatset=utf-8',
        'accept-encoding':'gzip',
        'User-Agent':eval(binascii.unhexlify(b'662244616c76696b2f322e312e3020284c696e75783b20553b20416e64726f696420382e312e303b20415355535f5830305444204d4955492f31362e323031372e323030392e3038372d32307b72646d2e72616e64696e74283131313131312c393939393939297d2922').decode('8ftu'[::+-+-(-(+1))]))
}
    data={'data':localIdRep}
    req=httpx.post(uri,data=json.dumps(data),headers=heder)
    if req.status_code==200:
        ress=json.loads(req.text)
        resss=json.loads(ress['result'])
        with open('player/data.json','w',encoding='utf-8')as f:
            json.dump({'data':resss},f,ensure_ascii=False,indent=4)
        print(eval(binascii.unhexlify(b'66225265706f7274203a207b6c656e287265737373297d22').decode('8ftu'[::+-+-(-(+1))])))
        return resss
def GetPlayerRecords():
    uri=eval(binascii.unhexlify(b'662268747470733a2f2f7b56686f73747d2f476574506c617965725265636f7264733222').decode('8ftu'[::+-+-(-(+1))]))
    heder={
        'Host':Vhost,
        'authorization':eval(binascii.unhexlify(b'6627426561726572207b56646174615b226964546f6b656e225d7d27').decode('8ftu'[::+-+-(-(+1))])),
        'firebase-instance-id-token':Vdata['firebase-instance-id-token'],
        'content-type':'application/json; chatset=utf-8',
        'accept-encoding':'gzip',
        'User-Agent':eval(binascii.unhexlify(b'662244616c76696b2f322e312e3020284c696e75783b20553b20416e64726f696420382e312e303b20415355535f5830305444204d4955492f31362e323031372e323030392e3038372d32307b72646d2e72616e64696e74283131313131312c393939393939297d2922').decode('8ftu'[::+-+-(-(+1))]))
}
    data={'data':Vdata['data']}
    req=httpx.post(uri,data=json.dumps(data),headers=heder)
    if req.status_code==200:
        ress=json.loads(req.text)
        resss=json.loads(ress['result'])
        with open('player/data.json','w',encoding='utf-8')as f:
            json.dump({'data':resss},f,ensure_ascii=False,indent=4)
        print(eval(binascii.unhexlify(b'66224461746120506c61796572203a207b6c656e287265737373297d22').decode('8ftu'[::+-+-(-(+1))])))
        return resss
def GetCarHash():
    uri=eval(binascii.unhexlify(b'662268747470733a2f2f7b56686f73747d2f4765744361724861736822').decode('8ftu'[::+-+-(-(+1))]))
    heder={
        'Host':Vhost,
        'authorization':eval(binascii.unhexlify(b'6627426561726572207b56646174615b226964546f6b656e225d7d27').decode('8ftu'[::+-+-(-(+1))])),
        'firebase-instance-id-token':Vdata['firebase-instance-id-token'],
        'content-type':'application/json; chatset=utf-8',
        'accept-encoding':'gzip',
        'User-Agent':eval(binascii.unhexlify(b'662244616c76696b2f322e312e3020284c696e75783b20553b20416e64726f696420382e312e303b20415355535f5830305444204d4955492f31362e323031372e323030392e3038372d32307b72646d2e72616e64696e74283131313131312c393939393939297d2922').decode('8ftu'[::+-+-(-(+1))]))
}
    data={'data':''}
    req=httpx.post(uri,data=json.dumps(data),headers=heder)
    if req.status_code==200:
        ress=json.loads(req.text)
        resss=json.loads(ress['result'])
        with open('player/carhash.json','w',encoding='utf-8')as f:
            json.dump({'result':resss},f,ensure_ascii=False,indent=4)
        print(eval(binascii.unhexlify(b'66224361722048617368203a207b6c656e287265737373297d22').decode('8ftu'[::+-+-(-(+1))])))
def SavePlayerRecords7(dataakun):
    uri=eval(binascii.unhexlify(b'662268747470733a2f2f7b56686f73747d2f53617665506c617965725265636f7264733722').decode('8ftu'[::+-+-(-(+1))]))
    heder={
        'Host':Vhost,
        'authorization':eval(binascii.unhexlify(b'6627426561726572207b56646174615b226964546f6b656e225d7d27').decode('8ftu'[::+-+-(-(+1))])),
        'firebase-instance-id-token':Vdata['firebase-instance-id-token'],
        'content-type':'application/json; chatset=utf-8',
        'accept-encoding':'gzip',
        'User-Agent':eval(binascii.unhexlify(b'662244616c76696b2f322e312e3020284c696e75783b20553b20416e64726f696420382e312e303b20415355535f5830305444204d4955492f31362e323031372e323030392e3038372d32307b72646d2e72616e64696e74283131313131312c393939393939297d2922').decode('8ftu'[::+-+-(-(+1))]))
}
    pipit=json.dumps(dataakun['data'])
    data={'data':pipit}
    req=httpx.post(uri,data=json.dumps(data),headers=heder,timeout=100)
    if req.status_code==200:
        ress=json.loads(req.text)
        print(eval(binascii.unhexlify(b'662253617665204163636f756e7420496e666f207b6c656e2872657373297d22').decode('8ftu'[::+-+-(-(+1))])))
        resss=json.loads(ress['result'])
        if resss==1:
            return True
        return True
    return False
def SaveCarHash(dataakun):
    uri=eval(binascii.unhexlify(b'662268747470733a2f2f7b56686f73747d2f536176654361724861736822').decode('8ftu'[::+-+-(-(+1))]))
    heder={
        'Host':Vhost,
        'authorization':eval(binascii.unhexlify(b'6627426561726572207b56646174615b226964546f6b656e225d7d27').decode('8ftu'[::+-+-(-(+1))])),
        'firebase-instance-id-token':Vdata['firebase-instance-id-token'],
        'content-type':'application/json; chatset=utf-8',
        'accept-encoding':'gzip',
        'User-Agent':eval(binascii.unhexlify(b'662244616c76696b2f322e312e3020284c696e75783b20553b20416e64726f696420382e312e303b20415355535f5830305444204d4955492f31362e323031372e323030392e3038372d32307b72646d2e72616e64696e74283131313131312c393939393939297d2922').decode('8ftu'[::+-+-(-(+1))]))
}
    pipit=json.dumps(dataakun['result'])
    data={'data':pipit}
    req=httpx.post(uri,data=json.dumps(data),headers=heder)
    if req.status_code==200:
        ress=json.loads(req.text)
        resss=json.loads(ress['result'])
        if resss==1:
            return True
    return False
def SaveCars(data):
    uri=eval(binascii.unhexlify(b'662268747470733a2f2f7b56686f73747d2f536176654361727322').decode('8ftu'[::+-+-(-(+1))]))
    heder={
        'Host':Vhost,
        'authorization':eval(binascii.unhexlify(b'6627426561726572207b56646174615b226964546f6b656e225d7d27').decode('8ftu'[::+-+-(-(+1))])),
        'firebase-instance-id-token':Vdata['firebase-instance-id-token'],
        'content-type':'application/json; chatset=utf-8',
        'accept-encoding':'gzip',
        'User-Agent':eval(binascii.unhexlify(b'662244616c76696b2f322e312e3020284c696e75783b20553b20416e64726f696420382e312e303b20415355535f5830305444204d4955492f31362e323031372e323030392e3038372d32307b72646d2e72616e64696e74283131313131312c393939393939297d2922').decode('8ftu'[::+-+-(-(+1))]))
}
    data=json.dumps({'data':json.dumps(data['data'])})
    try:
        req=httpx.post(uri,data=data,headers=heder,timeout=100)
        if req.status_code==200:
            ress=json.loads(req.text)
            resss=json.loads(ress['result'])
            return True
    except:
        pass
    return False
def RemoveCarFromDatabase(carid):
    uri=eval(binascii.unhexlify(b'662268747470733a2f2f7b56686f73747d2f52656d6f766543617246726f6d446174616261736522').decode('8ftu'[::+-+-(-(+1))]))
    heder={
        'Host':Vhost,
        'authorization':eval(binascii.unhexlify(b'6627426561726572207b56646174615b226964546f6b656e225d7d27').decode('8ftu'[::+-+-(-(+1))])),
        'firebase-instance-id-token':Vdata['firebase-instance-id-token'],
        'content-type':'application/json; chatset=utf-8',
        'accept-encoding':'gzip',
        'User-Agent':eval(binascii.unhexlify(b'662244616c76696b2f322e312e3020284c696e75783b20553b20416e64726f696420382e312e303b20415355535f5830305444204d4955492f31362e323031372e323030392e3038372d32307b72646d2e72616e64696e74283131313131312c393939393939297d2922').decode('8ftu'[::+-+-(-(+1))]))
}
    data={'data':json.dumps({'carID':int(carid),'carGeneratedID':''})}
    try:
        req=httpx.post(uri,data=json.dumps(data),headers=heder,timeout=100)
        ress=json.loads(req.text)
        if req.status_code==200:
            return True
    except Exception as e:
        print(eval(binascii.unhexlify(b'6622476167616c2053617665204d6f62696c203a7b657d22').decode('8ftu'[::+-+-(-(+1))])))
        pass
    return False
def TestGetAllCars():
    uri=eval(binascii.unhexlify(b'662268747470733a2f2f7b56686f73747d2f54657374476574416c6c4361727322').decode('8ftu'[::+-+-(-(+1))]))
    heder={
        'Host':Vhost,
        'authorization':eval(binascii.unhexlify(b'6627426561726572207b56646174615b226964546f6b656e225d7d27').decode('8ftu'[::+-+-(-(+1))])),
        'firebase-instance-id-token':Vdata['firebase-instance-id-token'],
        'content-type':'application/json; chatset=utf-8',
        'accept-encoding':'gzip',
        'User-Agent':eval(binascii.unhexlify(b'662244616c76696b2f322e312e3020284c696e75783b20553b20416e64726f696420382e312e303b20415355535f5830305444204d4955492f31362e323031372e323030392e3038372d32307b72646d2e72616e64696e74283131313131312c393939393939297d2922').decode('8ftu'[::+-+-(-(+1))]))
}
    data={'data':''}
    req=httpx.post(uri,data=json.dumps(data),headers=heder,timeout=1000)
    if req.status_code==200:
        ress=json.loads(req.text)
        resss=json.loads(ress['result'])
        urutan=''
        for itr in range(len(resss)):
            urutan+=str(resss[itr]['CarID'])+','
            with open(eval(binascii.unhexlify(b'6627706c617965722f636172732f7b72657373735b6974725d5b224361724944225d7d27').decode('8ftu'[::+-+-(-(+1))])),'w',encoding='utf-8')as f:
                json.dump({'data':resss[itr]},f,ensure_ascii=False,indent=4)
        print(urutan)
        print(eval(binascii.unhexlify(b'662244617461203a207b6c656e287265737373297d22').decode('8ftu'[::+-+-(-(+1))])))
def GetCarListWorldSale2(wsvalue):
    uri=eval(binascii.unhexlify(b'662268747470733a2f2f7b56686f73747d2f4765744361724c697374576f726c6453616c653222').decode('8ftu'[::+-+-(-(+1))]))
    heder={
        'Host':Vhost,
        'authorization':eval(binascii.unhexlify(b'6627426561726572207b56646174615b226964546f6b656e225d7d27').decode('8ftu'[::+-+-(-(+1))])),
        'firebase-instance-id-token':Vdata['firebase-instance-id-token'],
        'content-type':'application/json; chatset=utf-8',
        'accept-encoding':'gzip',
        'User-Agent':eval(binascii.unhexlify(b'662244616c76696b2f322e312e3020284c696e75783b20553b20416e64726f696420382e312e303b20415355535f5830305444204d4955492f31362e323031372e323030392e3038372d32307b72646d2e72616e64696e74283131313131312c393939393939297d2922').decode('8ftu'[::+-+-(-(+1))]))
}
    data=json.dumps({'data':{
                      '@type':'type.googleapis.com/google.protobuf.Int64Value','value':wsvalue}})
    req=httpx.post(uri,data=data,headers=heder,timeout=10)
    if req.status_code==200:
        ress=json.loads(req.text)
        return ress['result']
def TestGetOneCarFromWorldSale(ownerAccountID,carid,wsvalue):
    print('Get Car From WorldSale')
    uri=eval(binascii.unhexlify(b'662268747470733a2f2f7b56686f73747d2f546573744765744f6e6543617246726f6d576f726c6453616c6522').decode('8ftu'[::+-+-(-(+1))]))
    heder={
        'Host':Vhost,
        'authorization':eval(binascii.unhexlify(b'6627426561726572207b56646174615b226964546f6b656e225d7d27').decode('8ftu'[::+-+-(-(+1))])),
        'firebase-instance-id-token':Vdata['firebase-instance-id-token'],
        'content-type':'application/json; chatset=utf-8',
        'accept-encoding':'gzip',
        'User-Agent':eval(binascii.unhexlify(b'662244616c76696b2f322e312e3020284c696e75783b20553b20416e64726f696420382e312e303b20415355535f5830305444204d4955492f31362e323031372e323030392e3038372d32307b72646d2e72616e64696e74283131313131312c393939393939297d2922').decode('8ftu'[::+-+-(-(+1))]))
}
    data=json.dumps(
{'data':[str(ownerAccountID),str(carid),str(wsvalue)]})
    req=httpx.post(uri,data=data,headers=heder,timeout=1000)
    if req.status_code==200:
        ress=json.loads(req.text)
        return ress['result']
    return False
def signupNewUser(email,password):
    uri=eval(binascii.unhexlify(b'662268747470733a2f2f7777772e676f6f676c65617069732e636f6d2f6964656e74697479746f6f6c6b69742f76332f72656c79696e6770617274792f7369676e75704e6577557365723f6b65793d7b56646174615b276b6579275d7d22').decode('8ftu'[::+-+-(-(+1))]))
    data={'email':email,'password':password}
    req=httpx.post(uri,data=json.dumps(data),headers=Vheader)
    if req.status_code==200:
        ress=json.loads(req.text)
        Vdata['idToken']=ress['idToken']
        return True
    return False
def SetUserRatingCall(isidata):
    print('SetUserRatingCall')
    uri=eval(binascii.unhexlify(b'662268747470733a2f2f7b56686f73747d2f53657455736572526174696e6743616c6c22').decode('8ftu'[::+-+-(-(+1))]))
    heder={
        'Host':Vhost,
        'authorization':eval(binascii.unhexlify(b'6627426561726572207b56646174615b226964546f6b656e225d7d27').decode('8ftu'[::+-+-(-(+1))])),
        'firebase-instance-id-token':Vdata['firebase-instance-id-token'],
        'content-type':'application/json; chatset=utf-8',
        'accept-encoding':'gzip',
        'User-Agent':eval(binascii.unhexlify(b'662244616c76696b2f322e312e3020284c696e75783b20553b20416e64726f696420382e312e303b20415355535f5830305444204d4955492f31362e323031372e323030392e3038372d32307b72646d2e72616e64696e74283131313131312c393939393939297d2922').decode('8ftu'[::+-+-(-(+1))]))
}
    data={'data':json.dumps(isidata)}
    req=httpx.post(uri,data=json.dumps(data),headers=heder,timeout=1000)
    if req.status_code==200:
        ress=json.loads(req.text)
        return ress['result']
    return False
def cektoken(code):
    if dat['Vip']==False:
        head={'type':'topixsb'}
        param={'code':code}
        servers=json.loads(httpx.post('https://topixsb.dev/vipcodecek',params=param,headers=head).text)
        return(servers)
    else:
        print('Permanent Vip')
        return[1,20]
def usetoken(code,itr):
    if dat['Vip']==False:
        sisah=int(cektoken(code)[1])
        if sisah<itr:
            return[0,'Coin Tidak Cukup']
        else:
            for t in range(itr):
                head={'type':'topixsb'}
                param={'code':code}
                servers=json.loads(httpx.post('https://topixsb.dev/vipcode',params=param,headers=head).text)
            print(eval(binascii.unhexlify(b'66224a756d6c616820436f696e203d207b736572766572735b315d7d22').decode('8ftu'[::+-+-(-(+1))])))
            return(servers)
    else:
        print('Permanent Vip')
        return[1,20]
def cekvipemail(imail):
    head={'type':'topixsb'}
    param={'email':imail}
    servers=httpx.post('https://topixsb.dev/piaipicek',params=param,headers=head).text
    return(servers)
def c(colr,tex):
    try:
        w={
            'RED':[255,0,0],
            'GREEN':[0,255,0],
            'CYAN':[0,255,255],
            'YELLOW':[255,255,0],
            'GOLD':[255,223,0]
}
        return color(tex,
                     fore=(w[colr.upper()][0],
                           w[colr.upper()][1],
                           w[colr.upper()][2]),
                     back=(0,0,0))
    except:
        return tex
def getResource():
    def bar_progress(current,total,width=80,kutu=255):
        progress_message=[current/total*100,' %d%% [%d / %d] bytes' %(current/total*100,current,total)]
        babi=progress_message[0]
        er=int(255/2.55)
        ge=int(babi*2.55)
        be=0
        jambuair=er,ge,be
        sys.stdout.write('+color(progress_message[1],fore=jambuair,back=(0,0,0))')
        
        sys.stdout.flush()
    file_url='https://topixsb.dev/resource'
    file=urllib.request.urlopen(file_url)
    ukuran=convert_size(file.length)
    if input(eval(binascii.unhexlify(b'6622446f20796f7520616772656520746f20646f776e6c6f6164207b756b7572616e7d206d62205265736f757263652066696c653f20792f6e203a2022').decode('8ftu'[::+-+-(-(+1))]))).lower()=='y':
        wget.download(file_url,'SlSTEM.json',bar=bar_progress)
print()
print('Wajib BACA\n1. Harus Logout dari apk CPM dulu \nkecuali hanya ingin pakai fitur \ninject rank dan instant rank\nkarna 2 fitur itu tidak perlu logout\n\n2. Isi Coin Script termux di t.me/topixsb\n3. Cara Pakainya ada di YT TopixSB\n\nkirim Screenshot/Foto Bukti pembayaran ke topixsb\nkirim kode unik vip kamu (kodenya bebas)\ncoin akan di cek dan diupdate setiap jam 8 malam keatas\n')
datamod={
    'data':{
        'floats':[
            0,
-1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            5.106434345245361,
            0.8161052465438843,
            0
],
        'personEquipmentsFemale':{
            'top':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'bag':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'gloves':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'shoes':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'SelectedEquipments':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'face':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'pants':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'mask':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'hair':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'cap':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'Gender':1,
            'beard':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
]
},
        'AllCars':{
            '0':0,
            '1':1,
            '2':2,
            '3':3,
            '4':4,
            '5':5,
            '6':6,
            '7':7,
            '8':8,
            '9':9,
            '10':10,
            '11':11,
            '12':12,
            '13':13,
            '14':14,
            '15':15,
            '16':16,
            '17':17,
            '18':18,
            '19':19,
            '20':20,
            '21':21,
            '22':22,
            '23':23,
            '24':24,
            '25':25,
            '26':26,
            '27':27,
            '28':28,
            '29':29,
            '30':30,
            '31':31,
            '32':32,
            '33':33,
            '34':34,
            '35':35,
            '36':36,
            '37':37,
            '38':38,
            '39':39,
            '40':40,
            '41':41,
            '42':42,
            '43':43,
            '44':44,
            '45':45,
            '46':46,
            '47':47,
            '48':48,
            '49':49,
            '50':50,
            '51':51,
            '52':52,
            '53':53,
            '54':54,
            '55':55,
            '56':56,
            '57':57,
            '58':58,
            '59':59,
            '60':60,
            '61':61,
            '62':62,
            '63':63,
            '64':64,
            '65':65,
            '66':66,
            '67':67,
            '68':68,
            '69':69,
            '70':70,
            '71':71,
            '72':72,
            '73':73,
            '74':74,
            '75':75,
            '76':76,
            '77':77,
            '78':78,
            '79':79,
            '80':80,
            '81':81,
            '82':82,
            '83':83,
            '84':84,
            '85':85,
            '86':86,
            '87':87,
            '88':88,
            '89':89,
            '90':90,
            '91':91,
            '92':92,
            '93':93,
            '94':94,
            '95':95,
            '96':96,
            '97':97,
            '98':98,
            '99':99,
            '100':100,
            '101':101,
            '102':102,
            '103':103,
            '104':104,
            '105':105,
            '106':106,
            '107':107,
            '108':108,
            '109':109,
            '110':110,
            '111':111,
            '112':112,
            '113':113,
            '114':114,
            '115':115,
            '116':116,
            '117':117,
            '118':118,
            '119':119,
            '120':120,
            '121':121,
            '122':122,
            '123':123,
            '124':124,
            '125':125,
            '126':126,
            '127':127,
            '128':128,
            '129':129,
            '130':130,
            '131':131,
            '132':132,
            '133':133,
            '134':134,
            '135':135,
            '136':136,
            '137':137,
            '138':138,
            '139':139,
            '140':140,
            '141':141,
            '142':142,
            '143':143,
            '144':144,
            '145':145,
            '146':146,
            '147':147,
            '148':148,
            '149':149,
            '150':150,
            '151':151,
            '152':152,
            '153':153,
            '154':154,
            '155':155,
            '156':156,
            '157':157,
            '158':158,
            '159':159,
            '160':160,
            '161':161,
            '162':162,
            '163':163,
            '164':164,
            '165':165,
            '166':166,
            '167':167,
            '168':168,
            '169':169,
            '170':170,
            '171':171,
            '172':172,
            '173':173,
            '174':174,
            '175':175,
            '176':176,
            '177':177,
            '178':178,
            '179':179,
            '180':180,
            '181':181,
            '182':182,
            '183':183,
            '184':184,
            '185':185,
            '186':186,
            '187':187,
            '188':188,
            '189':189,
            '190':190,
            '191':191,
            '192':192,
            '193':193,
            '194':194,
            '195':195,
            '196':196,
            '197':197,
            '198':198,
            '199':199,
            '200':200,
            '201':201,
            '202':202,
            '203':203,
            '204':204,
            '205':205,
            '206':206,
            '207':207,
            '208':208,
            '209':209,
            '210':210,
            '211':211,
            '212':212,
            '213':213,
            '214':214,
            '215':215,
            '216':216,
            '217':217,
            '218':218,
            '219':219,
            '220':220
},
        'personEquipmentsMale':{
            'pants':[
                0,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'beard':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'Gender':1,
            'gloves':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'face':[
-1,
                1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'hair':[
-1,
                1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'mask':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'shoes':[
                0,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'SelectedEquipments':[
                1,
                1,
-1,
-1,
-1,
                3,
-1,
-1,
                0,
                0,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'cap':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'top':[
-1,
-1,
-1,
                3,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
                25,
-1,
-1,
-1,
-1,
                30,
                31,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'bag':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
]
},
        'LevelsDoneTime':[
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
],
        'coin':0,
        'money':50000000,
        'localID':'FE201636',
        'Name':'Player#585',
        'integers':[
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1
]
}
}
carhashmod={
    'result':[
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
]
}
data_basic={
    'data':{
        'FriendsID':[],
        'integers':[
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
],
        'coin':0,
        'fcar':[
            0
],
        'personEquipmentsFemale':{
            'hair':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'beard':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'shoes':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'face':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'bag':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'cap':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'gloves':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'top':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'pants':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'Gender':1,
            'mask':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'SelectedEquipments':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
]
},
        'platesData':{
            'allPlates':[
{
                    'rearCarId':-1,
                    'plateId':1,
                    'vinyls':[],
                    'frontCarId':-1
},
{
                    'vinyls':[],
                    'frontCarId':-1,
                    'rearCarId':-1,
                    'plateId':2
},
{
                    'vinyls':[],
                    'plateId':3,
                    'frontCarId':-1,
                    'rearCarId':-1
},
{
                    'frontCarId':-1,
                    'vinyls':[],
                    'plateId':4,
                    'rearCarId':-1
},
{
                    'vinyls':[],
                    'plateId':5,
                    'rearCarId':-1,
                    'frontCarId':-1
},
{
                    'rearCarId':-1,
                    'frontCarId':-1,
                    'vinyls':[],
                    'plateId':6
}
]
},
        'animations':[],
        'carIDnStatus':{
            'carStatus':[
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
],
            'carGeneratedIDs':[
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                'MJ072361_13PE034',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                ''
]
},
        'flags':{},
        'allData':'9FD07A11C3494803B517F92545ED5A6702AD0AD2',
        'Name':'Player#967',
        'localID':'',
        'LevelsDoneTime':[
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
],
        'personEquipmentsMale':{
            'cap':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'Gender':1,
            'hair':[
-1,
-1,
                2,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'top':[
-1,
-1,
                2,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'face':[
-1,
-1,
                2,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'pants':[
-1,
-1,
                2,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'SelectedEquipments':[
                2,
                2,
-1,
-1,
-1,
                2,
-1,
-1,
                2,
                0,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'shoes':[
                0,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'gloves':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'mask':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'beard':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
],
            'bag':[
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1
]
},
        'floats':[
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
],
        'money':25000
}
}
namacar={
  '1':'Smart fortwo',
  '2':'Daihatsu sirion',
  '3':'Lada vaz-2107',
  '4':'Civic ek9',
  '5':'Nissan 2000 gtr',
  '6':'Lada priora',
  '7':'Tofas dogan',
  '8':'Vaz 2114',
  '9':'Ford transit',
  '10':'Jeep wrangler rubicon',
  '11':'Mazda rx 8',
  '12':'Mini cooper',
  '13':'Peugeot 308',
  '14':'VW scirocco',
  '15':'Hyundai veloster',
  '16':'Ferarri 250 GT california',
  '17':'Benz w113',
  '18':'Mazda mx 5 miata',
  '19':'Hummer h1',
  '20':'Dodge charger',
  '21':'Dodge challanger 1960',
  '22':'Honda s2000',
  '23':'Chrysler 300 srt8',
  '24':'Bmw m135i',
  '25':'Benz 190e/w201',
  '26':'Bmw z4',
  '27':'Bmw e36 m3',
  '28':'Lexus gs 350',
  '29':'Tofas kartal',
  '30':'Audi sport quattro',
  '31':'Mitsubishi lancer evo 9',
  '32':'Subaru impreza',
  '33':'Lada niva',
  '34':'Civic type r',
  '35':'Ford mustang boss',
  '36':'Chevloret bel air',
  '37':'Toyota supra mk4',
  '38':'Benz w140',
  '39':'Civic fn2',
  '40':'Audi tt',
  '41':'Bmw m3',
  '42':'Civic Fd',
  '43':'Ford crown victoria',
  '44':'Bmw m5 e28',
  '45':'Cadillac escalade',
  '46':'Ford f150 svt raptor',
  '47':'Bmw 525 e34',
  '48':'Subaru brz / toyota gt86',
  '49':'Cadillac cts v',
  '50':'Bmw m5 e39',
  '51':'Bmw m3 e92',
  '52':'Nissan 350z / fairlady',
  '53':'Nissan skyline R32',
  '54':'Nissan skyline r34',
  '55':'Nissan silvia',
  '56':'Mazda rx7',
  '57':'Nissan 180 sx',
  '58':'Toyota ae86',
  '59':'Toyota mark 2',
  '60':'Hudson hornet',
  '61':'Lancer evo x',
  '62':'Subaru impreza wrx sti',
  '63':'Bmw m5 e60',
  '64':'Toyota camry',
  '65':'Benz g class 2005',
  '66':'Infiniti g37',
  '67':'Dodge charger srt hellcat',
  '68':'Benz c63 amg',
  '69':'Vw golf mk2',
  '70':'Vw golf mk7',
  '71':'Bmw x5 m',
  '72':'Ford explorer',
  '73':'Chevrolet camaro zl1',
  '74':'Bmw m2 cs',
  '75':'Audi s5 sportback',
  '76':'Audi rs4',
  '77':'Ford mustang gt',
  '78':'Bmw m5 f10',
  '79':'Porsche cayenne',
  '80':'Toyota vellfire / Alphard',
  '81':'Range rover',
  '82':'Benz cl65 amg',
  '83':'Bmw m4 f82',
  '84':'Benz amg gt',
  '85':'Porsche panamera turbo',
  '86':'Ford mustang',
  '87':'Land cruiser',
  '88':'Mercedes gle',
  '89':'Ferrrari 458 italia',
  '90':'Bmw m6 f13',
  '91':'Porsche 911',
  '92':'Bmw i8',
  '93':'Ford gt',
  '94':'Scania',
  '95':'Kenworth t680',
  '96':'Daf truck',
  '97':'Towing',
  '98':'Lexus lfa',
  '99':'Bmw x6',
  '100':'Lambo gallardo',
  '101':'Audi rs6',
  '102':'Supra mk5',
  '103':'Bmw m4 2021 competition',
  '104':'Bmw m5 f90',
  '105':'Benz e36',
  '106':'Dodge challenger srt demon',
  '107':'Hilux',
  '108':'Sierra 1500 denali',
  '109':'Benz s65 amg',
  '110':'Audi r8 v8',
  '111':'Acura nsx',
  '112':'Lamborghini huracan',
  '113':'Corvette c7',
  '114':'Corvette c8',
  '115':'Dodge viper',
  '116':'Nissan gtr r35',
  '117':'Benz s class',
  '118':'Audi r8 v10',
  '119':'Ferarri f12',
  '120':'Rolls Royce Phantom',
  '121':'Lamborghini urus',
  '122':'Lamborghini aventador',
  '123':'Rolls royce Boat Tail',
  '124':'Bentley continental gt',
  '125':'Benz amg gt63',
  '126':'Jeep grand cherokee',
  '127':'Benz g class 2020',
  '128':'Bmw m8',
  '129':'Buggy',
  '130':'Mclaren p1',
  '131':'Mclaren 720s',
  '132':'Lamborghini veneno',
  '133':'Lamborghini aventador svj',
  '134':'Bugatti veyron',
  '135':'Koenisegg agera r',
  '136':'F1',
  '137':'F1 New',
  '138':'...?',
  '139':'...?'
}
nomercar={'result':[{'urutan':1,'id':'59'},
{'urutan':2,'id':'133'},
{'urutan':3,'id':'132'},
{'urutan':4,'id':'13'},
{'urutan':5,'id':'53'},
{'urutan':6,'id':'99'},
{'urutan':7,'id':'100'},
{'urutan':8,'id':'102'},
{'urutan':9,'id':'37'},
{'urutan':10,'id':'21'},
{'urutan':11,'id':'48'},
{'urutan':12,'id':'77'},
{'urutan':13,'id':'74'},
{'urutan':14,'id':'2'},
{'urutan':15,'id':'23'},
{'urutan':16,'id':'51'},
{'urutan':17,'id':'163'},
{'urutan':18,'id':'158'},
{'urutan':19,'id':'55'},
{'urutan':20,'id':'39'},
{'urutan':21,'id':'160'},
{'urutan':22,'id':'47'},
{'urutan':23,'id':'66'},
{'urutan':24,'id':'1'},
{'urutan':25,'id':'106'},
{'urutan':26,'id':'76'},
{'urutan':27,'id':'0'},
{'urutan':28,'id':'43'},
{'urutan':29,'id':'152'},
{'urutan':30,'id':'108'},
{'urutan':31,'id':'82'},
{'urutan':32,'id':'81'},
{'urutan':33,'id':'146'},
{'urutan':34,'id':'147'},
{'urutan':35,'id':'148'},
{'urutan':36,'id':'149'},
{'urutan':37,'id':'49'},
{'urutan':38,'id':'112'},
{'urutan':39,'id':'29'},
{'urutan':40,'id':'20'},
{'urutan':41,'id':'88'},
{'urutan':42,'id':'137'},
{'urutan':43,'id':'139'},
{'urutan':44,'id':'54'},
{'urutan':45,'id':'60'},
{'urutan':46,'id':'85'},
{'urutan':47,'id':'45'},
{'urutan':48,'id':'6'},
{'urutan':49,'id':'57'},
{'urutan':50,'id':'30'},
{'urutan':51,'id':'56'},
{'urutan':52,'id':'145'},
{'urutan':53,'id':'156'},
{'urutan':54,'id':'11'},
{'urutan':55,'id':'128'},
{'urutan':56,'id':'129'},
{'urutan':57,'id':'131'},
{'urutan':58,'id':'140'},
{'urutan':59,'id':'134'},
{'urutan':60,'id':'89'},
{'urutan':61,'id':'12'},
{'urutan':62,'id':'9'},
{'urutan':63,'id':'31'},
{'urutan':64,'id':'120'},
{'urutan':65,'id':'4'},
{'urutan':66,'id':'8'},
{'urutan':67,'id':'62'},
{'urutan':68,'id':'17'},
{'urutan':69,'id':'157'},
{'urutan':70,'id':'113'},
{'urutan':71,'id':'86'},
{'urutan':72,'id':'168'},
{'urutan':73,'id':'5'},
{'urutan':74,'id':'127'},
{'urutan':75,'id':'117'},
{'urutan':76,'id':'15'},
{'urutan':77,'id':'35'},
{'urutan':78,'id':'3'},
{'urutan':79,'id':'28'},
{'urutan':80,'id':'151'},
{'urutan':81,'id':'110'},
{'urutan':82,'id':'87'},
{'urutan':83,'id':'103'},
{'urutan':84,'id':'19'},
{'urutan':85,'id':'24'},
{'urutan':86,'id':'116'},
{'urutan':87,'id':'121'},
{'urutan':88,'id':'123'},
{'urutan':89,'id':'58'},
{'urutan':90,'id':'22'},
{'urutan':91,'id':'109'},
{'urutan':92,'id':'138'},
{'urutan':93,'id':'130'},
{'urutan':94,'id':'70'},
{'urutan':95,'id':'170'},
{'urutan':96,'id':'171'},
{'urutan':97,'id':'101'},
{'urutan':98,'id':'7'},
{'urutan':99,'id':'118'},
{'urutan':100,'id':'65'},
{'urutan':101,'id':'135'},
{'urutan':102,'id':'150'},
{'urutan':103,'id':'153'},
{'urutan':104,'id':'104'},
{'urutan':105,'id':'114'},
{'urutan':106,'id':'105'},
{'urutan':107,'id':'154'},
{'urutan':108,'id':'126'},
{'urutan':109,'id':'61'},
{'urutan':110,'id':'107'},
{'urutan':111,'id':'111'},
{'urutan':112,'id':'18'},
{'urutan':113,'id':'40'},
{'urutan':114,'id':'166'},
{'urutan':115,'id':'141'},
{'urutan':116,'id':'14'},
{'urutan':117,'id':'136'},
{'urutan':118,'id':'115'},
{'urutan':119,'id':'10'},
{'urutan':120,'id':'172'},
{'urutan':121,'id':'125'},
{'urutan':122,'id':'42'},
{'urutan':123,'id':'124'},
{'urutan':124,'id':'169'},
{'urutan':125,'id':'142'},
{'urutan':126,'id':'161'},
{'urutan':127,'id':'143'},
{'urutan':128,'id':'144'},
{'urutan':130,'id':'41'},
{'urutan':131,'id':'162'},
{'urutan':132,'id':'44'},
{'urutan':133,'id':'159'},
{'urutan':134,'id':'27'},
{'urutan':135,'id':'32'},
{'urutan':136,'id':'155'},
{'urutan':137,'id':'165'},
{'urutan':138,'id':'167'},
{'urutan':139,'id':'173'}
]
}
cost={
    '2':1,
    '3':1,
    '4':1,
    '7':1,
    '9':2,
    '10':3,
    '11':1,
    '15':1,
    '16':8,
    '17':2,
}
def tes():
    pass
def cariid(urutan):
    data=nomercar
    for mydatacar in data['result']:
        if mydatacar['urutan']==urutan:
            return mydatacar['id']
def cariurutan(cariid):
    data=nomercar
    for mydatacar in data['result']:
        if mydatacar['id']==cariid:
            return[1,mydatacar['urutan']]
    return[0,cariid]
def cekdatalivery(carid):
    path='cpm/cars/livery/'
    dir_list=os.listdir(path)
    dir_list=sorted(dir_list,key=len,reverse=False)
    if str(carid)in dir_list:
        return True
    else:
        return False
def savewscar(carid,data):
    datacarname=str(carid)
    itrliverydata=1
    while True:
        if cekdatalivery(datacarname)==False:
            break
        else:
            datacarname=eval(binascii.unhexlify(b'66227b63617269647d5f22').decode('8ftu'[::+-+-(-(+1))]))+str(itrliverydata)
            itrliverydata+=1
    dataforsave={
        'data':data['thisCarData']
}
    dataforsave['data']['Vynils']=data['thisCarVynils']
    with open(eval(binascii.unhexlify(b'662763706d2f636172732f6c69766572792f7b646174616361726e616d657d27').decode('8ftu'[::+-+-(-(+1))])),'w',encoding='utf-8')as f:
        json.dump(dataforsave,f,ensure_ascii=False,indent=4)
    return datacarname
def modifspekbalap(datacar):
    datacar['data']['floats'][0]=float(1)
    datacar['data']['floats'][1]=float(99)
    datacar['data']['floats'][2]=float(8000)
    datacar['data']['floats'][3]=float(2300)
    datacar['data']['floats'][4]=float(7899)
    datacar['data']['floats'][7]=float(3)
    datacar['data']['floats'][16]=float(1e-28)
    return datacar
def sirine(datacar):
    datacar['data']['floats'][0]=float(1)
    return datacar
if __name__=='__main__':
    disp=''
    while True:
        print(disp)
        menus=eval(binascii.unhexlify(b'662222220d0a7b6328226379616e222c223d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d22297d0d0a2020202020202020546f7069782053422043504d20544f4f4c53207b70657273697d0d0a7b6328226379616e222c223d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d22297d0d0a5b7b632822676f6c64222c22e2978f22297d5d206164616c6168206a756d6c616820436f696e2079616e67206469207065726c756b616e0d0a312e2065646974206163636f756e742043504d0d0a322e20637265617465206163636f756e742043504d0d0a6e756d6265722028782065786974293a20222222').decode('8ftu'[::+-+-(-(+1))]))
        inp=input(menus)
        if inp=='x' or inp=='X':
            break
        elif inp=='0':
            pass
        elif inp=='1':
            print(c('cyan','=================== verifyPassword'))
            while True:
                email,passwd=input('email : '),input('password : ')
                teslogin=verifyPassword(email,passwd)
                if teslogin !=None:
                    break
                print(c('red','Wrong Email or Password..!'))
            if dat['Vip']==0:
                if cekvipemail(email)=='Vip':
                    dat['Vip']=True
                    codex='ini vip'
                else:
                    dat['Vip']=True
                    codex='ini vip'
                    
            print(c('cyan','=================== getAccountInfo'))
            getAccountInfo()
            print(c('cyan','=================== GetPlayerRecords'))
            vrs=GetPlayerRecords()
            print(c('cyan','=================== TestGetAllCars'))
            os.system('rm -rf player/cars')
            os.mkdir('player/cars')
            TestGetAllCars()
            print(c('cyan','=================== GetCarHash'))
            GetCarHash()
            print(c('cyan','=================== SavePlayerRecords7'))
            print(c('red','==========[ INFO ]==========='))
            try:
                print(eval(binascii.unhexlify(b'6627203e3e204e69636b6e616d65203a207b646973706c61797761726e612e64697370287672735b224e616d65225d297d27').decode('8ftu'[::+-+-(-(+1))])))
            except:
                print(eval(binascii.unhexlify(b'6627203e3e204e69636b6e616d65203a207b7672735b224e616d65225d7d27').decode('8ftu'[::+-+-(-(+1))])))
            try:
                print(eval(binascii.unhexlify(b'6627203e3e204944202020202020203a207b7672735b226c6f63616c4944225d7d27').decode('8ftu'[::+-+-(-(+1))])))
                print(eval(binascii.unhexlify(b'6627203e3e204d6f6e6579202020203a207b7672735b226d6f6e6579225d7d27').decode('8ftu'[::+-+-(-(+1))])))
                print(eval(binascii.unhexlify(b'6627203e3e20436f696e20202020203a207b7672735b22636f696e225d7d27').decode('8ftu'[::+-+-(-(+1))])))
            except:
                print('Data sebagian belum ada')
            print(c('red','=============================='))
            menusedit=eval(binascii.unhexlify(b'66222222456e74657220546f2053686f77204163636f756e7420496e666f726d6174696f6e0d0a312e20636f6d696e6720736f6f6e0d0a322e205265736574202620496e6a65637420616c6c2063617273205b7b632822676f6c64222c22e2978f22297d5d0d0a332e204368726f6d6520416c6c2043617273205b7b632822676f6c64222c22e2978f22297d5d0d0a342e20556e2d4368726f6d6520416c6c2043617273205b7b632822676f6c64222c22e2978f22297d5d0d0a352e206564697420706c617965722063617273205b7b6328226379616e222c224652454522297d5d0d0a362e20756e6c6f636b206b6c616b736f6e205b7b6328226379616e222c224652454522297d5d0d0a372e2047657420313338204c75636b792052616e646f6d204c6976657279205b7b632822676f6c64222c22e2978f222a636f73745b2237225d297d5d0d0a382e2065646974206d6f6e6579205b7b6328226379616e222c224652454522297d5d0d0a392e206564697420636f696e2043504d205b7b632822676f6c64222c22e2978f222a636f73745b2239225d297d5d0d0a31302e2065646974204944205b7b632822676f6c64222c22e2978f222a636f73745b223130225d297d5d0d0a31312e20726573657420456d6f7465205b7b632822676f6c64222c22e2978f22297d5d0d0a31322e20726573657420667269656e64206c697374205b7b6328226379616e222c224652454522297d5d0d0a31332e2065646974204e616d65205b7b6328226379616e222c224652454522297d5d0d0a31342e205261696e626f77204e616d65205b7b6328226379616e222c224652454522297d5d0d0a31352e20496e6a65637420437573746f6d203320416368696576656d656e7473205b7b632822676f6c64222c22e2978f222a636f73745b223135225d297d5d0d0a31362e20496e7374616e74205065726d616e656e74204b696e672052616e6b205b7b632822676f6c64222c22e2978f222a636f73745b223136225d297d5d0d0a31372e2052656d6f766520556e6b6e6f776e2043617273205b7b632822676f6c64222c22e2978f222a636f73745b223137225d297d5d0d0a31382e2052656d6f766520416c6c2043617273205b7b6328226379616e222c224652454522297d5d0d0a782e20457869740d0a0d0a20202043686f696365203a0d0a222222').decode('8ftu'[::+-+-(-(+1))]))
            while True:
                try:
                    codetok=cektoken(codex)
                    jcoin=eval(binascii.unhexlify(b'66224a756d6c616820436f696e203d20287b636f6465746f6b5b315d7d2922').decode('8ftu'[::+-+-(-(+1))]))
                    for popi in range(int(codetok[1])):
                        jcoin+=(eval(binascii.unhexlify(b'66277b632822676f6c64222c22e2978f22297d27').decode('8ftu'[::+-+-(-(+1))])))
                    print(jcoin)
                except:pass
                inp=input(menusedit)
                if inp=='x' or inp=='X':
                    break
                elif inp=='':
                    print(c('cyan','=================== GetPlayerRecords'))
                    vrs=GetPlayerRecords()
                    time.sleep(1)
                    with open('player/data.json','r',encoding='utf-8')as openfile:
                        data=json.load(openfile)
                    print(c('cyan','==========[ INFO ]==========='))
                    try:
                        print(
                            eval(binascii.unhexlify(b'6627203e3e204e69636b6e616d65203a207b646973706c61797761726e612e64697370287672735b224e616d65225d297d27').decode('8ftu'[::+-+-(-(+1))])))
                    except:
                        print(eval(binascii.unhexlify(b'6627203e3e204e69636b6e616d65203a207b7672735b224e616d65225d7d27').decode('8ftu'[::+-+-(-(+1))])))
                    try:
                        print(eval(binascii.unhexlify(b'6627203e3e204944202020202020203a207b7672735b226c6f63616c4944225d7d27').decode('8ftu'[::+-+-(-(+1))])))
                        print(eval(binascii.unhexlify(b'6627203e3e204d6f6e6579202020203a207b7672735b226d6f6e6579225d7d27').decode('8ftu'[::+-+-(-(+1))])))
                        print(eval(binascii.unhexlify(b'6627203e3e20436f696e20202020203a207b7672735b22636f696e225d7d27').decode('8ftu'[::+-+-(-(+1))])))
                        codetok=cektoken(codex)
                    except:
                        print('Data sebagian belum ada')
                    print(c('cyan','=============================='))
                elif inp=='1':
                    pass
                elif inp=='2':
                    if codetok[0]!=1 and dat['Vip']==False:
                        print(c('red','Your Coin is 0, please Topup first'))
                    else:
                        codetok=usetoken(codex,cost[inp])
                        if codetok[0]==0:
                            print(c('red',codetok[1]))
                            break
                        with open('player/data.json','r',encoding='utf-8')as openfile:
                            data=json.load(openfile)
                        datamod['data']['allData']=data['data']['allData']
                        datamod['data']['Name']=data['data']['Name']
                        datamod['data']['coin']=data['data']['coin']
                        datamod['data']['money']=data['data']['money']
                        datamod['data']['localID']=data['data']['localID']
                        datamod['data']['FriendsID']=data['data']['FriendsID']
                        with open('player/carhash.json','w',encoding='utf-8')as f:
                            json.dump(carhashmod,f,ensure_ascii=False,indent=4)
                        if SavePlayerRecords7(data)and SaveCarHash(carhashmod):
                            disp=c('green','Success')
                        else:
                            disp=c('red','Failed')
                        sys.stdout.write(eval(binascii.unhexlify(b'662220203e3e207b646973707d205c7222').decode('8ftu'[::+-+-(-(+1))])))
                        sys.stdout.flush()
                        time.sleep(2)
                        path='cpm/cars/mod/'
                        dir_list=os.listdir(path)
                        dir_list=sorted(dir_list,key=len,reverse=False)
                        for idcar in dir_list:
                            with open(eval(binascii.unhexlify(b'662763706d2f636172732f6d6f642f7b69646361727d27').decode('8ftu'[::+-+-(-(+1))])),'r',encoding='utf-8')as openfile:
                                datacar=json.load(openfile)
                            if SaveCars(datacar):
                                disp=c('green','Success')
                            else:
                                disp=c('red','Failed')
                            sys.stdout.write(eval(binascii.unhexlify(b'662220203e3e20496e6a6563742043617273206964205b7b69646361727d2f7b6c656e286469725f6c697374297d5d2020207b646973707d205c7222').decode('8ftu'[::+-+-(-(+1))])))
                            sys.stdout.flush()
                elif inp=='3':
                    if codetok[0]!=1 and dat['Vip']==False:
                        print(c('red','Your Coin is 0, please Topup first'))
                    else:
                        dir_list=sorted(os.listdir('player/cars/'),key=len,reverse=False)
                        itr=0
                        for idcar in dir_list:
                            itr+=1
                            xyp=cariurutan(idcar)
                            with open(eval(binascii.unhexlify(b'6627706c617965722f636172732f7b69646361727d27').decode('8ftu'[::+-+-(-(+1))])),'r',encoding='utf-8')as openfile:
                                datacar=json.load(openfile)
                            datacar['data']['vectors'][12]={'x':-5,'z':-5,'y':-5}
                            if SaveCars(datacar):
                                disp=c('green','Success')
                            else:
                                disp=c('red','Failed')
                            sys.stdout.write(eval(binascii.unhexlify(b'662220203e3e204368726f6d65205b7b69646361727d2f7b6c656e286469725f6c697374297d5d2020207b646973707d205c7222').decode('8ftu'[::+-+-(-(+1))])))
                            sys.stdout.flush()
                        codetok=usetoken(codex,cost[inp])
                elif inp=='4':
                    if codetok[0]!=1 and dat['Vip']==False:
                        print(c('red','Your Coin is 0, please Topup first'))
                    else:
                        dir_list=sorted(os.listdir('player/cars/'),key=len,reverse=False)
                        itr=0
                        for idcar in dir_list:
                            itr+=1
                            xyp=cariurutan(idcar)
                            with open(eval(binascii.unhexlify(b'6627706c617965722f636172732f7b69646361727d27').decode('8ftu'[::+-+-(-(+1))])),'r',encoding='utf-8')as openfile:
                                datacar=json.load(openfile)
                            datacar['data']['vectors'][12]={'x':2,'z':2,'y':2}
                            if SaveCars(datacar):
                                disp=c('green','Success')
                            else:
                                disp=c('red','Failed')
                            sys.stdout.write(eval(binascii.unhexlify(b'662220203e3e20556e2d4368726f6d65205b7b6974727d2f7b6c656e286469725f6c697374297d5d2020207b646973707d205c7222').decode('8ftu'[::+-+-(-(+1))])))
                            sys.stdout.flush()
                        codetok=usetoken(codex,cost[inp])
                elif inp=='5':
                    dir_list=sorted(os.listdir('player/cars/'),key=len,reverse=False)
                    print('\n  [ Urutan Cars yang tersedia ]')
                    dir_urut=[]
                    for idnya in dir_list:
                        xyp=cariurutan(idnya)
                        stat=xyp[0]
                        urt=xyp[1]
                        if stat==1:
                            dir_urut.append({'urut':int(urt),'id':int(idnya)})
                    dir_urut=sorted(dir_urut,key=lambda k:k['urut'])
                    for urid in dir_urut:
                        try:
                            print(eval(binascii.unhexlify(b'662775727574616e203a207b757269645b2275727574225d7d5c745b7b63282279656c6c6f77222c757269645b226964225d297d5d207b6328226379616e222c6e616d616361725b73747228757269645b2275727574225d295d297d27').decode('8ftu'[::+-+-(-(+1))])))
                        except:
                            pass
                    urutcar=input('\nurutan car : ')
                    idcar=cariid(int(urutcar))
                    if idcar==None:
                        print('ga ada data id car')
                    else:
                        print(eval(binascii.unhexlify(b'6622494420434152204e5941204144414c4148207b69646361727d22').decode('8ftu'[::+-+-(-(+1))])))
                        with open(eval(binascii.unhexlify(b'6627706c617965722f636172732f7b69646361727d27').decode('8ftu'[::+-+-(-(+1))])),'r',encoding='utf-8')as openfile:
                            datacar=json.load(openfile)
                        menuscar='\n\n        [ Menu Edit ]\n    1. Police on\n    2. Police off\n    3. Bongkar Spek\n    4. Magnet cars\n    5. chrome Car\n    Save & Exit = q\n    choice :\n'
                        while True:
                            caredit=input(menuscar)
                            if caredit=='q':
                                break
                            elif caredit=='1':
                                datacar['data']['floats'][0]=1
                                print(c('cyan','Press q to save'))
                            elif caredit=='2':
                                datacar['data']['floats'][0]=0
                                print(c('cyan','Press q to save'))
                            elif caredit=='3':
                                print('mulai dari HP')
                                datacar['data']['floats'][1]=float(
                                    input('HP	:'))
                                datacar['data']['floats'][2]=float(
                                    input('inner HP	:'))
                                datacar['data']['floats'][3]=float(
                                    input('NM	:'))
                                datacar['data']['floats'][4]=float(
                                    input('inner NM	:'))
                                datacar['data']['floats'][7]=float(
                                    input('Grip	:'))
                                datacar['data']['floats'][16]=float(
                                    input('Shift Time	:'))
                                with open(eval(binascii.unhexlify(b'6627706c617965722f636172732f7b69646361727d27').decode('8ftu'[::+-+-(-(+1))])),'w',encoding='utf-8')as f:
                                    json.dump(datacar,f,ensure_ascii=False,indent=4)
                                print(c('cyan','Press q to save'))
                            elif caredit=='4':
                                tnya=input('1.ori\n2.magnet\nChoose Number: ')
                                if tnya=='x':
                                    break
                                try:
                                    po=int(tnya)
                                    if po==1:datacar['data']['vectors'][6]['x']=float(-2)
                                    elif po==2:datacar['data']['vectors'][6]['x']=float(98989898989)
                                    else:
                                        print('wrong input')
                                    with open(eval(binascii.unhexlify(b'6627706c617965722f636172732f7b69646361727d27').decode('8ftu'[::+-+-(-(+1))])),'w',encoding='utf-8')as f:
                                        json.dump(datacar,f,ensure_ascii=False,indent=4)
                                    print(c('cyan','Press q to save'))
                                except:
                                    pass
                            elif caredit=='5':
                                datacar['data']['vectors'][12]={'x':-5,'z':-5,'y':-5}
                                with open(eval(binascii.unhexlify(b'6627706c617965722f636172732f7b69646361727d27').decode('8ftu'[::+-+-(-(+1))])),'w',encoding='utf-8')as f:
                                    json.dump(datacar,f,ensure_ascii=False,indent=4)
                                print(c('cyan','Press q to save'))
                        if SaveCars(datacar):
                            disp=c('green','Success')
                        else:
                            disp=c('red','Failed')
                        print(disp)
                elif inp=='6':
                    print(c('cyan','=================== GetPlayerRecords'))
                    vrs=GetPlayerRecords()
                    with open('player/data.json','r',encoding='utf-8')as openfile:
                        data=json.load(openfile)
                    data['data']['floats'][27]=1
                    data['data']['floats'][28]=1
                    data['data']['floats'][29]=1
                    data['data']['floats'][30]=1
                    data['data']['floats'][31]=1
                    if SavePlayerRecords7(data):
                        disp=c('green','Success')
                    else:
                        disp=c('red','Failed')
                    print(disp)
                elif inp=='7':
                    if codetok[0]!=1 and dat['Vip']==False:
                        print(c('red','Your Coin is 0, please Topup first'))
                    else:
                        if os.path.exists(eval(binascii.unhexlify(b'6622536c5354454d2e6a736f6e22').decode('8ftu'[::+-+-(-(+1))])))==False:
                            getResource()
                        print()
                        currentliverysize=convert_size(os.path.getsize('SlSTEM.json'))
                        file_url='https://topixsb.dev/resource'
                        file=urllib.request.urlopen(file_url)
                        ukuran=convert_size(file.length)
                        if currentliverysize!=ukuran:
                            if input('Update the latest livery data? y/n :').lower()=='y':
                                os.system(eval(binascii.unhexlify(b'6622726d20536c5354454d2e6a736f6e22').decode('8ftu'[::+-+-(-(+1))])))
                                getResource()
                            print()
                        atten='Your current car will be deleted, y=Agree n=Disagree\ny or n : '
                        perhatian=input(c('red',atten))
                        if perhatian.lower()=='y':
                            codetok=usetoken(codex,cost[inp])
                            with open('SlSTEM.json','r',encoding='utf-8')as openfile:
                                dir_list=json.load(openfile)
                            if codetok[0]==0:
                                print(c('red',codetok[1]))
                                break
                            terdesign=0
                            itr=0
                            for idcar in dir_list:
                                if len(dir_list[idcar])!=0:
                                    itr+=1
                                    liverytype=rdm.choice(list(dir_list[idcar].keys()))
                                    datacar=dir_list[idcar][liverytype]
                                    datacar=sirine(datacar)
                                    if SaveCars(datacar)==True:
                                        disp=c('green','Success')
                                        terdesign+=1
                                    else:
                                        disp=c('red','Failed')
                                else:
                                    sys.stdout.write(eval(binascii.unhexlify(b'662720203e3e207b632822726564222c6622736b6970207b69646361727d22297d205c7227').decode('8ftu'[::+-+-(-(+1))])))
                                    sys.stdout.flush()
                                sys.stdout.write(eval(binascii.unhexlify(b'662720203e3e20496e6a656374204c69766572792043617273205b7b6974727d5d20207b63282279656c6c6f77222c662252616e646f6d20547970653a7b6c6976657279747970657d22297d207b646973707d205c7227').decode('8ftu'[::+-+-(-(+1))])))
                                sys.stdout.flush()
                            print()
                            print(eval(binascii.unhexlify(b'66224c69766572792079616e6720746572706173616e67203a207b74657264657369676e7d22').decode('8ftu'[::+-+-(-(+1))])))
                elif inp=='8':
                    print(c('cyan','=================== GetPlayerRecords'))
                    vrs=GetPlayerRecords()
                    muniy=input('Money : ')
                    with open('player/data.json','r',encoding='utf-8')as openfile:
                        data=json.load(openfile)
                    data['data']['money']=int(muniy)
                    if SavePlayerRecords7(data):
                        disp='Sukses'
                    else:
                        disp='Gagal'
                elif inp=='9':
                    if codetok[0]!=1 and dat['Vip']==False:
                        print(c('red','Your Coin is 0, please Topup first'))
                    else:
                        if codetok[0]==0:
                            print(c('red',codetok[1]))
                            break
                        print(c('cyan','=================== GetPlayerRecords'))
                        vrs=GetPlayerRecords()
                        while True:
                            muniy=input('Coin : ')
                            if int(muniy)<22000:
                                break
                        with open('player/data.json','r',encoding='utf-8')as openfile:
                            data=json.load(openfile)
                        data['data']['coin']=int(muniy)
                        if SavePlayerRecords7(data):
                            disp='Sukses'
                            codetok=usetoken(codex,cost[inp])
                        else:
                            disp='Gagal'
                elif inp=='10':
                    if codetok[0]!=1 and dat['Vip']==False:
                        print(c('red','Your Coin is 0, please Topup first'))
                    else:
                        if codetok[0]==0:
                            print(c('red',codetok[1]))
                            break
                        print(c('cyan','=================== GetPlayerRecords'))
                        vrs=GetPlayerRecords()
                        while True:
                            muniy=input('localID : ')
                            if len(muniy)<=8:
                                break
                            else:
                                print(c('red','Wajib 8 Character atau dibawahnya'))
                        with open('player/data.json','r',encoding='utf-8')as openfile:
                            data=json.load(openfile)
                        data['data']['localID']=muniy
                        if SavePlayerRecords7(data):
                            disp='Sukses'
                            codetok=usetoken(codex,cost[inp])
                        else:
                            disp='Gagal'
                elif inp=='11':
                    if codetok[0]!=1 and dat['Vip']==False:
                        print(c('red','Your Coin is 0, please Topup first'))
                    else:
                        print(c('cyan','=================== GetPlayerRecords'),0)
                        vrs=GetPlayerRecords()
                        with open('player/data.json','r',encoding='utf-8')as openfile:
                            data=json.load(openfile)
                        print(data['data']['animations'])
                        data['data']['animations']=[]
                        print(data['data']['animations'])
                        if SavePlayerRecords7(data):
                            disp='Sukses'
                            codetok=usetoken(codex,cost[inp])
                        else:
                            disp='Gagal'
                elif inp=='12':
                    print(c('cyan','=================== Reset Friend List'))
                    vrs=GetPlayerRecords()
                    with open('player/data.json','r',encoding='utf-8')as openfile:
                        data=json.load(openfile)
                    data['data']['FriendsID']=[]
                    if SavePlayerRecords7(data):
                        disp=c('green','Success')
                    else:
                        disp=c('red','Failed')
                    print(disp)
                elif inp=='13':
                    print(c('cyan','=================== Edit Name'))
                    with open('player/data.json','r',encoding='utf-8')as openfile:
                        data=json.load(openfile)
                    data['data']['Name']=input('New Name : ')
                    if SavePlayerRecords7(data):
                        vrs=GetPlayerRecords()
                        disp=c('green','Success')
                    else:
                        disp=c('red','Failed')
                    print(disp)
                elif inp=='14':
                    print(c('cyan','=================== Rainbow Name'))
                    with open('player/data.json','r',encoding='utf-8')as openfile:
                        data=json.load(openfile)
                    data['data']['Name']=NamaBerwarna.generate()
                    if SavePlayerRecords7(data):
                        vrs=GetPlayerRecords()
                        disp=c('green','Success')
                    else:
                        disp=c('red','Failed')
                    print(disp)
                elif inp=='15':
                    if codetok[0]!=1 and dat['Vip']==False:
                        print(c('red','Your Coin is 0, please Topup first'))
                    else:
                        if codetok[0]==0:
                            print(c('red',codetok[1]))
                            break
                        print(c('cyan','=================== Inject Rank'))
                        contoh={
                                't_distance':0,
                                'time':0,
                                'speed_banner':0,
                                'gifts':0,
                                'treasure':0,
                                'cars':0,
                                'race_win':0,
                                'levels':0,
                                'drift':0,
                                'run':0,
                                'police':0,
                                'block_post':0,
                                'real_estate':0,
                                'fuel':0,
                                'car_trade':0,
                                'car_exchange':0,
                                'burnt_tire':0,
                                'car_fix':0,
                                'car_wash':0,
                                'offroad':0,
                                'passanger_distance':0,
                                'reactions':0,
                                'drift_max':0,
                                'taxi':0,
                                'delivery':0,
                                'cargo':0,
                                'push_ups':0,
                                'slicer_cut':0,
                                'car_collided':0,
                                'new_type':0
}
                        isidata={
                            'RatingData':{}
}
                        itr=1
                        for x in contoh:
                            print(eval(binascii.unhexlify(b'66227b6974727d2e207b787d22').decode('8ftu'[::+-+-(-(+1))])))
                            itr+=1
                        print('\n  q = Exit')
                        codetok=usetoken(codex,cost[inp])
                        for tong in range(3,0,-1):
                            print(eval(binascii.unhexlify(b'66225c745c747b746f6e677d2074696d657320616761696e22').decode('8ftu'[::+-+-(-(+1))])))
                            nums=input('	number : ')
                            if nums=='q':
                                break
                            palue=input('	edit to : ')
                            if palue=='inf':
                                palue=float('3E38')
                            itr=1
                            for x in contoh:
                                if int(nums)==itr:
                                    isidata['RatingData'][x]=float(palue)
                                itr+=1
                            if SetUserRatingCall(isidata)!=False:
                                disp=c('green','Success')
                            else:
                                disp=c('red','Failed')
                            print(disp)
                elif inp=='16':
                    if codetok[0]!=1 and dat['Vip']==False:
                        print(c('red','Your Coin is 0, please Topup first'))
                    else:
                        if codetok[0]==0:
                            print(c('red',codetok[1]))
                            break
                        print(c('cyan','=================== Istant King Rank'))
                        contoh={
                                't_distance':10000,
                                'time':30000,
                                'speed_banner':1000,
                                'gifts':100,
                                'treasure':100,
                                'cars':137,
                                'race_win':1000,
                                'levels':82,
                                'drift':1000,
                                'run':500,
                                'police':1000,
                                'block_post':1000,
                                'real_estate':12,
                                'fuel':10000,
                                'car_trade':100,
                                'car_exchange':100,
                                'burnt_tire':100,
                                'car_fix':100,
                                'car_wash':100,
                                'offroad':1000,
                                'passanger_distance':1000,
                                'reactions':2000,
                                'drift_max':1000,
                                'taxi':1000,
                                'delivery':1000,
                                'cargo':1000,
                                'push_ups':957,
                                'slicer_cut':1,
                                'car_collided':1,
                                'new_type':0
}
                        isidata={
                            'RatingData':contoh
}
                        if SetUserRatingCall(isidata)!=False:
                            codetok=usetoken(codex,cost[inp])
                            disp=c('green','Success')
                        else:
                            disp=c('red','Failed')
                        print(disp)
                elif inp=='17':
                    if codetok[0]!=1 and dat['Vip']==False:
                        print(c('red','Your Coin is 0, please Topup first'))
                    else:
                        if codetok[0]==0:
                            print(c('red',codetok[1]))
                            break
                        dir_list=sorted(os.listdir('player/cars/'),key=len,reverse=False)
                        print('\n  [ Urutan Cars yang tersedia ]')
                        dir_urut=[]
                        for idnya in dir_list:
                            urt=cariurutan(idnya)
                            if urt[0]==1:
                                dir_urut.append({'urut':urt[1],'id':idnya})
                            else:
                                print(idnya)
                                xxcx=RemoveCarFromDatabase(int(idnya))
                                print(eval(binascii.unhexlify(b'662772657152656d6f7665203a207b787863787d27').decode('8ftu'[::+-+-(-(+1))])))
                        dir_urut=sorted(dir_urut,key=lambda k:k['urut'])
                        for urid in dir_urut:
                            try:
                                print(eval(binascii.unhexlify(b'662775727574616e203a207b757269645b2275727574225d7d5c745b7b757269645b226964225d7d5d207b6e616d616361725b73747228757269645b2275727574225d295d7d27').decode('8ftu'[::+-+-(-(+1))])))
                            except:
                                pass
                        codetok=usetoken(codex,cost[inp])
                        disp=c('green','Success')
                        print(disp)
                elif inp=='18':
                    dir_list=sorted(os.listdir('player/cars/'),key=len,reverse=False)
                    dir_urut=[]
                    for idnya in dir_list:
                        xxcx=RemoveCarFromDatabase(int(idnya))
                        sys.stdout.write(eval(binascii.unhexlify(b'66277b63282279656c6c6f77222c662220203e3e2052656d6f766520436172205b7b69646e79617d5d202022297d205c7227').decode('8ftu'[::+-+-(-(+1))])))
                        sys.stdout.flush()
                    disp=c('green','Success')
                    print(disp)
        elif inp=='2':
            print('Create Account')
            if signupNewUser(input(' Email : '),input(' Password : ')):
                data=data_basic
                data['data']['Name']='Player#'+str(random.randint(11111,99999))
                data['data']['localID']='TSB'+str(random.randint(11111,99999))
                print(c('red','=============================='))
                try:
                    print(
                        eval(binascii.unhexlify(b'6627203e3e204e69636b6e616d65203a207b646973706c61797761726e612e6469737028646174615b2264617461225d5b224e616d65225d297d27').decode('8ftu'[::+-+-(-(+1))])))
                except:
                    print(eval(binascii.unhexlify(b'6627203e3e204e69636b6e616d65203a207b646174615b2264617461225d5b224e616d65225d7d27').decode('8ftu'[::+-+-(-(+1))])))
                try:
                    print(eval(binascii.unhexlify(b'6627203e3e204944202020202020203a207b646174615b2264617461225d5b226c6f63616c4944225d7d27').decode('8ftu'[::+-+-(-(+1))])))
                    print(eval(binascii.unhexlify(b'6627203e3e204d6f6e6579202020203a207b646174615b2264617461225d5b226d6f6e6579225d7d27').decode('8ftu'[::+-+-(-(+1))])))
                    print(eval(binascii.unhexlify(b'6627203e3e20436f696e20202020203a203027').decode('8ftu'[::+-+-(-(+1))])))
                except:
                    print('Data sebagian belum ada')
                print(c('red','=============================='))
                datacar=carhashmod
                if SavePlayerRecords7(data)and SaveCarHash(datacar):
                    disp='Sukses'
                else:
                    disp='Gagal'
            else:
                disp=c('red','Email sudah terdaftar')
        else:
            print('Wrong...!')
